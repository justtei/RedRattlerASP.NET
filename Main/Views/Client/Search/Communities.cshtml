@using MSLivingChoices.Entities.Client.Search.Criteria
@using MSLivingChoices.Mvc.Uipc.Client.Enums
@using MSLivingChoices.Mvc.Uipc.Client.Helpers
@using MSLivingChoices.Mvc.Uipc.Client.ViewModels
@using MSLivingChoices.Mvc.Uipc.Enums
@using MSLivingChoices.Utilities

@model CommunitiesSearchVm

@{
    ViewBag.Title = "SearchResult";
    Layout = "~/Views/Client/Shared/_SearchResultLayout.cshtml";
}
<style>
    .refine {
        list-style: none;
        margin: 0;
        padding: 0;
    }

        .refine > li {
            font-weight: 700;
            display: inline-block;
            padding: 5px;
        }

    .control.list-inline li {
        display: inline-block;
        color: dodgerblue;
        text-transform: capitalize;
        cursor: pointer;
    }

        .control.list-inline li:hover {
            text-decoration: underline;
        }

    .pull-right {
        float: right;
    }

    .header {
        box-shadow: 0px 0px 0px 0px rgb(27 27 41 / 15%);
    }

    .select2.select2-container.select2-container--default {
        width: 100% !important;
    }
</style>
@section scripts
{
    <script type="text/html" id="qv-widget">
        <section class="quick" data-bind="slideVisible: isShow">
            <div class="container" data-bind="template: { name: tab().template, data: tab().model, afterRender: tab().afterRender }">
            </div>
            <div class="control txt-center">
                <button class="btn btn-close"
                        data-bind="click: hide">
                    Close
                    <i class="icon-arrow-top"></i>
                </button>
            </div>
        </section>
    </script>

    @{ Html.RenderPartial("~/Views/Client/Search/Partial/QuickView.cshtml"); }
    @*    @{ Html.RenderPartial("~/Views/Client/Search/Partial/MapView.cshtml"); }*@
    @{ Html.RenderPartial("~/Views/Client/Search/Partial/SpecHome.cshtml"); }
    @{ Html.RenderPartial("~/Views/Client/Search/Partial/Home.cshtml"); }
    @{ Html.RenderPartial("~/Views/Client/Search/Partial/FloorPlan.cshtml"); }
    @{ Html.RenderPartial("~/Views/Client/Search/Partial/PhotoTour.cshtml"); }
    @{ Html.RenderPartial("~/Views/Client/Search/Partial/NearbyPopover.cshtml"); }
    @{ Html.RenderPartial("~/Views/Client/Controls/LeadForm/CommunityUnitPopUp.cshtml"); }

    <script type="text/javascript">
        mslc.resolve([
                'lib/ko', 'client/widgets/refine', 'client/widgets/refine/aahAac', 'client/widgets/refine/shc'
            ],
            function(ko, Refine, AahAac, Shc) {
                @switch (Model.PageType.ToRefineType())
                {
                    case RefineType.SeniorHousing:
                        {
                        <text>
                var refine = new Refine(@Html.Json(Model), Shc);
                ko.applyBindings(refine, document.getElementById("refine"));
                ko.applyBindings(refine, document.getElementById("sort"));
                </text>
                            break;
                        }
                    case RefineType.ActiveCommunity:
                    case RefineType.ActiveHome:
                        {
                        <text>
                var refine = new Refine(@Html.Json(Model), AahAac);
                ko.applyBindings(refine, document.getElementById("refine"));
                ko.applyBindings(refine, document.getElementById("sort"));
                </text>
                            break;
                        }
                }
            },
            'init-refine');

        mslc.resolve(['client/widgets/qvInitializer'],
            function(initQv) {
                initQv(@((int)Model.PageType.ToSearchType()), 'communityId');
            },
            'init-qv');

        mslc.resolve(['client/widgets/leadForm'],
            function(leadForm) {
                leadForm.initPopUpSharedData(@Html.Json(Model.LeadForm));
            },
            'init-lead-form');

        mslc.resolve(['client/widgets/googlePublisherTag'],
            function(gpt) {
                gpt.initSearchResultsSlots({
                    country: '@Model.Criteria.CountryCode()',
                    state: '@Model.Criteria.StateCode()',
                    city: '@Model.Criteria.City()'
                });
            },
            'init-gpt');

        mslc.resolve(['client/analytics/google'],
            function(ga) {
                ga.trackPageView(@Html.Json(Model.Dimensions));
            },
            'ga-tracking');

        mslc.resolve(['client/widgets/communityUnit'],
            function() {
            },
            'init-community-unit');

        mslc.resolve(['client/ui/hintsManager'],
            function(hints) {
            },
            'init-hints');

        console.log('search', @Html.Json(Model));
    </script>
    <style>
        .ssh {
            transition: all ease-in-out .5s;
            overflow: hidden;
        }
    </style>
    @if (Model.PageType == PageType.ShcByCity
      && Model.Criteria.StateCode().Equals("TX", StringComparison.InvariantCultureIgnoreCase)
      && Model.Criteria.City().Equals("San Antonio", StringComparison.InvariantCultureIgnoreCase))
    {
        //special case per request
        <script id="mcjs">!function (c, h, i, m, p) { m = c.createElement(h), p = c.getElementsByTagName(h)[0], m.async = 1, m.src = i, p.parentNode.insertBefore(m, p) }(document, "script", "https://chimpstatic.com/mcjs-connected/js/users/9356da7e888bd5e92a7c9c92d/a007c0b68c9102af711ccee36.js");</script>
    }
}
@{
    string communityItemType = Model.PageType.ToSearchType() == SearchType.ActiveAdultHomes
        ? "http://schema.org/GatedResidenceCommunity"
        : "http://schema.org/Residence";
}
@if (((IEnumerable<dynamic>)Model.Result).Where(x => x.DisplayProperties.Featured == true).Count() != 0 && Model.Result != null)
{
    <section style="padding-top:20px;">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-10">
                    <div class="section-title text-center">
                        <h2>Featured Properties</h2>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="owl-carousel owl-dots-bottom-center" data-nav-dots="true" data-items="3" data-md-items="2" data-sm-items="1" data-xs-items="1" data-xx-items="1" data-space="30">
                        @foreach (var community in Model.Result)
                        {
                            if (community.DisplayProperties.Featured)
                            {
                                <div class="item">
                                    <div class="property-list bg-light">
                                        <div class="property-image h-100 bg-overlay-gradient-04">
                                            @if (community.DisplayProperties.Image)
                                            {
                                                @RenderHelper.ThumbnailWithMicrodata(community.Image, "img-fluid");
                                            }
                                            <div class="property-featured">
                                                <span class="badge badge-md">FEATURED</span>
                                            </div>
                                            @if (community.DisplayProperties.Price)
                                            {
                                                <div class="property-prize">
                                                    <span class="badge badge-md">@community.Price</span>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="property-prize">
                                                    <span class="badge badge-md">$&nbsp;?</span>
                                                </div>
                                            }
                                            @if (community.Beds.IsValued)
                                            {
                                                <div class="property-room">
                                                    <span class="badge badge-md"><i class="fas fa-bed fa-1x text-white mr-1"></i> @community.Beds.Value</span>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="property-room">
                                                    <span class="badge badge-md"><i class="fas fa-bed fa-1x text-white mr-1"></i> &nbsp;? </span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="property-detail bg-light p-4">
                                        <h5 class="property-title text-truncate"><a href="@community.DetailsUrl">@(community.DisplayProperties.Name ? community.Name : "View details")</a></h5>
                                        <ul class="pl-0">
                                            <li class="property-address"><i class="fas fa-map-marker-alt fa-1x mr-1 text-secondary"></i>@community.Address.City, @community.Address.StateCode</li>
                                            <li class="property-address"><i class="fas fa-building fa-1x text-secondary mr-1"></i>55+ Community  •  Apartments</li>
                                            @if (community.DisplayProperties.Phone)
                                            {
                                                <li class="property-address"><i class="fas fa-phone-alt text-secondary mr-1"></i> @community.Phone</li>
                                            }
                                            else
                                            {
                                                <li class="property-address"><i class="fas fa-phone-alt text-secondary mr-1"></i></li>

                                            }
                                        </ul>

                                        <button class="btn btn-primary btn-md"
                                                data-toggle="lead-form"
                                                data-accessor="attr"
                                                data-listing-id="@community.Id"
                                                data-listing-name="@community.Name"
                                                data-message="@community.GetLeadFormMessage()">
                                            Check Availability
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@*@{ Html.RenderPartial("~/Views/Client/Partial/SearchBarForm.cshtml"); }
    @{ Html.RenderPartial("~/Views/Client/Partial/Breadcrumbs.cshtml", new ViewDataDictionary(Model.Breadcrumbs)); }*@
@if (!Model.Result.Any())
{
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-md-6 mb-3">
                <img alt="No results" style="width: 100%;" src="~/Content/images/stub/no-result.png" />
            </div>
            <span class="col-lg-6 col-md-6 mb-3 text-justify d-flex align-items-center">
                We could not find any listings in this area or your search filters may be too strict. Please try to clear all filters or
                search for nearby locations with listings. Our information is updated daily so please check back soon.
            </span>
        </div>
    </div>
}

@if(Model.Result.Any()){
    switch (Model.PageType.ToRefineType())
    {
        case RefineType.SeniorHousing:
            {
                Html.RenderPartial("~/Views/Client/Search/Partial/Refine/Shc.cshtml");
                break;
            }
        case RefineType.ActiveCommunity:
        case RefineType.ActiveHome:
            {
                Html.RenderPartial("~/Views/Client/Search/Partial/Refine/AacAah.cshtml");
                break;
            }
        case RefineType.Service:
            {
                Html.RenderPartial("~/Views/Client/Search/Partial/Refine/Pas.cshtml");
                break;
            }
    }
}




<script>
    function GoLikeIt(div) {
        var Ndiv = div.nextElementSibling;

        if (Ndiv.style.height != '0px') {
            Ndiv.style.height = '0px';
        }
        else {
            Ndiv.style.height = 'fit-content';
        }
    }

    function listShow() {
        $(".map-container").css("display", "none");
        $("#list_view").css("display", "initial");
    }

    function mapShow() {
        $(".map-container").css("display", "initial");
        $("#list_view").css("display", "none");

        var communities = @Html.Json(Model.Result);
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: new google.maps.LatLng(communities[0]["address"]["latitude"], communities[0]["address"]["longitude"]),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });
        var infowindow = new google.maps.InfoWindow();
        var marker, i;
        for (i = 0; i < communities.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(communities[i]["address"]["latitude"], communities[i]["address"]["longitude"]),
                map: map
            });
            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    var str = `<div class="card" style="width: 14rem;">
                                  <img class="card-img-top" src="`+ communities[i]['image']['thumbnailSrc']+`" alt="thumbnail">
                                  <div class="card-body p-1">
                                    <p class="card-title m-0"><a href="`+ communities[i]['detailsUrl'] + `">` + communities[i]['name'] +`</a></p>
                                    <p class="property-address m-0"><i class="fas fa-map-marker-alt fa-1x mr-1 text-secondary"></i>`+ communities[i]['address']['city'] + `,` + communities[i]['address']['stateCode'] + `</p>
                                    <p class="property-address m-0"><i class="fas fa-building fa-1x text-secondary mr-1"></i>55+ Community  •  Apartments</p>
                                    <p class="property-address m-0"><i class="fas fa-phone-alt text-secondary mr-1"></i>`+ communities[i]['phone'] + `</p>
                                  </div>
                                </div>`
                    infowindow.setContent(str);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }
    }
    console.log(@Html.Json(Model));
</script>
